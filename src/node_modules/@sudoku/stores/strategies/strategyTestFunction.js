import { decodeSencode, decodeSencodeForCandidateGrid, encodeSudokuFromCandidateGrid } from '../../sencode/index.js';
import { CandidateGrid } from '../candidateGrid.js'
export function test(input_sencode, expect_output_sencode, strategy, strateyName) {
    let input_candidate_grid = decodeSencodeForCandidateGrid(input_sencode);
    let grid = decodeSencode(input_sencode).grid;
    let totalRemoved = 0;
    let updatedCandidates = [];

    let result = strategy.execute(grid, input_candidate_grid.array);
    totalRemoved = result.removed;
    updatedCandidates = result.updatedCandidates;

    let actual_output_candidate_grid = new CandidateGrid();
    actual_output_candidate_grid.array = updatedCandidates;
    const actual_output_sencode = encodeSudokuFromCandidateGrid(grid, actual_output_candidate_grid);
    if (actual_output_sencode === expect_output_sencode) {
        console.log("[+++] " + strateyName + " Strategy Test passed!");
        // return true;
    } else {
        console.log("[!!!] " + strateyName + " Strategy Test failed");
    }
}
import { XWingStrategy } from '@sudoku/stores/strategies/xWingStrategy';
import { YWingStrategy } from '@sudoku/stores/strategies/yWingStrategy';
import { NakedPairStrategy } from '@sudoku/stores/strategies/nakedPairStrategy';
import { NakedSingleStrategy } from '@sudoku/stores/strategies/nakedSingleStrategy';
import { HiddenSingleStrategy } from '@sudoku/stores/strategies/hiddenSingleStrategy';

export class StrategyFactory {
  static create(name) {
    switch (name) {
      case 'X-Wing':
        return new XWingStrategy();
      case 'Y-Wing':
        return new YWingStrategy(); 
      case 'NakedPair':
        return new NakedPairStrategy();
      case 'NakedSingle':
        return new NakedSingleStrategy();
      case 'HiddenSingle':
        return new HiddenSingleStrategy();
      default:
        return null;
    }
  }
}